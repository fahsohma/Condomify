{"version":3,"sources":["../node_modules/vanilla-masker/lib/vanilla-masker.js","../src/index.js","../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_vanillaMasker","_interopRequireDefault","require","e","__esModule","default","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","aplicarMascaraTelefone","input","VanillaMasker","maskPattern","formatarNome","nome","palavrasIgnoradas","toLowerCase","split","map","palavra","includes","toUpperCase","join","document","addEventListener","_callee","response","condominios","selectCondominio","telefoneInputInicial","nomeInputInicial","_callee$","_context","fetch","json","getElementById","condominio","option","createElement","textContent","appendChild","querySelector","target","window","adicionarMorador","moradoresDiv","novoMorador","classList","add","innerHTML","telefoneInput","nomeInput","removerMorador","botao","moradorDiv","parentElement","remove","removerMascaraTelefone","telefone","replace","validarTelefone","telefoneSemMascara","_ref2","_callee2","nomeCondominio","bloco","apartamento","moradores","moradoresDivs","telefoneValido","result","_callee2$","_context2","preventDefault","trim","alert","querySelectorAll","morador","telefoneComMascara","headers","body","JSON","stringify","message","_x","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","stack","overlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","k","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"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","file":"src.7ed060e2.js","sourceRoot":"..\\public","sourcesContent":["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.VMasker = factory();\n  }\n}(this, function() {\n  var DIGIT = \"9\",\n      ALPHA = \"A\",\n      ALPHANUM = \"S\",\n      BY_PASS_KEYS = [9, 16, 17, 18, 36, 37, 38, 39, 40, 91, 92, 93],\n      isAllowedKeyCode = function(keyCode) {\n        for (var i = 0, len = BY_PASS_KEYS.length; i < len; i++) {\n          if (keyCode == BY_PASS_KEYS[i]) {\n            return false;\n          }\n        }\n        return true;\n      },\n      mergeMoneyOptions = function(opts) {\n        opts = opts || {};\n        opts = {\n          delimiter: opts.delimiter || \".\",\n          lastOutput: opts.lastOutput,\n          precision: opts.hasOwnProperty(\"precision\") ? opts.precision : 2,\n          separator: opts.separator || \",\",\n          showSignal: opts.showSignal,\n          suffixUnit: opts.suffixUnit && (\" \" + opts.suffixUnit.replace(/[\\s]/g,'')) || \"\",\n          unit: opts.unit && (opts.unit.replace(/[\\s]/g,'') + \" \") || \"\",\n          zeroCents: opts.zeroCents\n        };\n        opts.moneyPrecision = opts.zeroCents ? 0 : opts.precision;\n        return opts;\n      },\n      // Fill wildcards past index in output with placeholder\n      addPlaceholdersToOutput = function(output, index, placeholder) {\n        for (; index < output.length; index++) {\n          if(output[index] === DIGIT || output[index] === ALPHA || output[index] === ALPHANUM) {\n            output[index] = placeholder;\n          }\n        }\n        return output;\n      }\n  ;\n\n  var VanillaMasker = function(elements) {\n    this.elements = elements;\n  };\n\n  VanillaMasker.prototype.unbindElementToMask = function() {\n    for (var i = 0, len = this.elements.length; i < len; i++) {\n      this.elements[i].lastOutput = \"\";\n      this.elements[i].onkeyup = false;\n      this.elements[i].onkeydown = false;\n\n      if (this.elements[i].value.length) {\n        this.elements[i].value = this.elements[i].value.replace(/\\D/g, '');\n      }\n    }\n  };\n\n  VanillaMasker.prototype.bindElementToMask = function(maskFunction) {\n    var that = this,\n        onType = function(e) {\n          e = e || window.event;\n          var source = e.target || e.srcElement;\n\n          if (isAllowedKeyCode(e.keyCode)) {\n            setTimeout(function() {\n              that.opts.lastOutput = source.lastOutput;\n              source.value = VMasker[maskFunction](source.value, that.opts);\n              source.lastOutput = source.value;\n              if (source.setSelectionRange && that.opts.suffixUnit) {\n                source.setSelectionRange(source.value.length, (source.value.length - that.opts.suffixUnit.length));\n              }\n            }, 0);\n          }\n        }\n    ;\n    for (var i = 0, len = this.elements.length; i < len; i++) {\n      this.elements[i].lastOutput = \"\";\n      this.elements[i].onkeyup = onType;\n      if (this.elements[i].value.length) {\n        this.elements[i].value = VMasker[maskFunction](this.elements[i].value, this.opts);\n      }\n    }\n  };\n\n  VanillaMasker.prototype.maskMoney = function(opts) {\n    this.opts = mergeMoneyOptions(opts);\n    this.bindElementToMask(\"toMoney\");\n  };\n\n  VanillaMasker.prototype.maskNumber = function() {\n    this.opts = {};\n    this.bindElementToMask(\"toNumber\");\n  };\n  \n  VanillaMasker.prototype.maskAlphaNum = function() {\n    this.opts = {};\n    this.bindElementToMask(\"toAlphaNumeric\");\n  };\n\n  VanillaMasker.prototype.maskPattern = function(pattern) {\n    this.opts = {pattern: pattern};\n    this.bindElementToMask(\"toPattern\");\n  };\n\n  VanillaMasker.prototype.unMask = function() {\n    this.unbindElementToMask();\n  };\n\n  var VMasker = function(el) {\n    if (!el) {\n      throw new Error(\"VanillaMasker: There is no element to bind.\");\n    }\n    var elements = (\"length\" in el) ? (el.length ? el : []) : [el];\n    return new VanillaMasker(elements);\n  };\n\n  VMasker.toMoney = function(value, opts) {\n    opts = mergeMoneyOptions(opts);\n    if (opts.zeroCents) {\n      opts.lastOutput = opts.lastOutput || \"\";\n      var zeroMatcher = (\"(\"+ opts.separator +\"[0]{0,\"+ opts.precision +\"})\"),\n          zeroRegExp = new RegExp(zeroMatcher, \"g\"),\n          digitsLength = value.toString().replace(/[\\D]/g, \"\").length || 0,\n          lastDigitLength = opts.lastOutput.toString().replace(/[\\D]/g, \"\").length || 0\n      ;\n      value = value.toString().replace(zeroRegExp, \"\");\n      if (digitsLength < lastDigitLength) {\n        value = value.slice(0, value.length - 1);\n      }\n    }\n    var number = value.toString().replace(/[\\D]/g, \"\"),\n        clearDelimiter = new RegExp(\"^(0|\\\\\"+ opts.delimiter +\")\"),\n        clearSeparator = new RegExp(\"(\\\\\"+ opts.separator +\")$\"),\n        money = number.substr(0, number.length - opts.moneyPrecision),\n        masked = money.substr(0, money.length % 3),\n        cents = new Array(opts.precision + 1).join(\"0\")\n    ;\n    money = money.substr(money.length % 3, money.length);\n    for (var i = 0, len = money.length; i < len; i++) {\n      if (i % 3 === 0) {\n        masked += opts.delimiter;\n      }\n      masked += money[i];\n    }\n    masked = masked.replace(clearDelimiter, \"\");\n    masked = masked.length ? masked : \"0\";\n    var signal = \"\";\n    if(opts.showSignal === true) {\n      signal = value < 0 || (value.startsWith && value.startsWith('-')) ? \"-\" :  \"\";\n    }\n    if (!opts.zeroCents) {\n      var beginCents = number.length - opts.precision,\n          centsValue = number.substr(beginCents, opts.precision),\n          centsLength = centsValue.length,\n          centsSliced = (opts.precision > centsLength) ? opts.precision : centsLength\n      ;\n      cents = (cents + centsValue).slice(-centsSliced);\n    }\n    var output = opts.unit + signal + masked + opts.separator + cents;\n    return output.replace(clearSeparator, \"\") + opts.suffixUnit;\n  };\n\n  VMasker.toPattern = function(value, opts) {\n    var pattern = (typeof opts === 'object' ? opts.pattern : opts),\n        patternChars = pattern.replace(/\\W/g, ''),\n        output = pattern.split(\"\"),\n        values = value.toString().replace(/\\W/g, \"\"),\n        charsValues = values.replace(/\\W/g, ''),\n        index = 0,\n        i,\n        outputLength = output.length,\n        placeholder = (typeof opts === 'object' ? opts.placeholder : undefined)\n    ;\n    \n    for (i = 0; i < outputLength; i++) {\n      // Reached the end of input\n      if (index >= values.length) {\n        if (patternChars.length == charsValues.length) {\n          return output.join(\"\");\n        }\n        else if ((placeholder !== undefined) && (patternChars.length > charsValues.length)) {\n          return addPlaceholdersToOutput(output, i, placeholder).join(\"\");\n        }\n        else {\n          break;\n        }\n      }\n      // Remaining chars in input\n      else{\n        if ((output[i] === DIGIT && values[index].match(/[0-9]/)) ||\n            (output[i] === ALPHA && values[index].match(/[a-zA-Z]/)) ||\n            (output[i] === ALPHANUM && values[index].match(/[0-9a-zA-Z]/))) {\n          output[i] = values[index++];\n        } else if (output[i] === DIGIT || output[i] === ALPHA || output[i] === ALPHANUM) {\n          if(placeholder !== undefined){\n            return addPlaceholdersToOutput(output, i, placeholder).join(\"\");\n          }\n          else{\n            return output.slice(0, i).join(\"\");\n          }\n        }\n      }\n    }\n    return output.join(\"\").substr(0, i);\n  };\n\n  VMasker.toNumber = function(value) {\n    return value.toString().replace(/(?!^-)[^0-9]/g, \"\");\n  };\n  \n  VMasker.toAlphaNumeric = function(value) {\n    return value.toString().replace(/[^a-z0-9 ]+/i, \"\");\n  };\n\n  return VMasker;\n}));\n","// src/index.js\r\nimport VanillaMasker from 'vanilla-masker';\r\n\r\n// Função para aplicar a máscara ao telefone\r\nfunction aplicarMascaraTelefone(input) {\r\n  VanillaMasker(input).maskPattern('(99) 99999-9999');\r\n}\r\n\r\n// Função para formatar o nome, exceto palavras específicas\r\nfunction formatarNome(nome) {\r\n  const palavrasIgnoradas = ['de', 'da', 'do', 'dos', 'das', 'di'];\r\n  return nome\r\n    .toLowerCase()\r\n    .split(' ')\r\n    .map((palavra) => {\r\n      if (palavrasIgnoradas.includes(palavra)) {\r\n        return palavra; // Mantém em minúsculas\r\n      }\r\n      return palavra.charAt(0).toUpperCase() + palavra.slice(1); // Capitaliza a primeira letra\r\n    })\r\n    .join(' ');\r\n}\r\n\r\n// Carregar condomínios ao abrir a página\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  // Carregar lista de condomínios\r\n  const response = await fetch('/api/apartamentos/condominios');\r\n  const condominios = await response.json();\r\n\r\n  const selectCondominio = document.getElementById('nomeCondominio');\r\n  condominios.forEach((condominio) => {\r\n    const option = document.createElement('option');\r\n    option.value = condominio.nome;\r\n    option.textContent = condominio.nome;\r\n    selectCondominio.appendChild(option);\r\n  });\r\n\r\n  // Aplicar máscara ao campo de telefone inicial\r\n  const telefoneInputInicial = document.querySelector('input[name=\"moradorTelefone\"]');\r\n  if (telefoneInputInicial) {\r\n    aplicarMascaraTelefone(telefoneInputInicial);\r\n  }\r\n\r\n  // Formatar o nome em tempo real no campo inicial\r\n  const nomeInputInicial = document.querySelector('input[name=\"moradorNome\"]');\r\n  if (nomeInputInicial) {\r\n    nomeInputInicial.addEventListener('input', (e) => {\r\n      e.target.value = formatarNome(e.target.value);\r\n    });\r\n  }\r\n});\r\n\r\n// Tornar as funções globais\r\nwindow.adicionarMorador = function() {\r\n  const moradoresDiv = document.getElementById('moradores');\r\n  const novoMorador = document.createElement('div');\r\n  novoMorador.classList.add('morador');\r\n  novoMorador.innerHTML = `\r\n    <input type=\"text\" name=\"moradorNome\" placeholder=\"Nome do Morador\" required>\r\n    <input type=\"text\" name=\"moradorTelefone\" placeholder=\"Telefone\" required>\r\n    <button type=\"button\" onclick=\"removerMorador(this)\">Remover</button>\r\n  `;\r\n  moradoresDiv.appendChild(novoMorador);\r\n\r\n  // Aplicar a máscara ao novo campo de telefone\r\n  const telefoneInput = novoMorador.querySelector('input[name=\"moradorTelefone\"]');\r\n  aplicarMascaraTelefone(telefoneInput);\r\n\r\n  // Formatar o nome em tempo real\r\n  const nomeInput = novoMorador.querySelector('input[name=\"moradorNome\"]');\r\n  nomeInput.addEventListener('input', (e) => {\r\n    e.target.value = formatarNome(e.target.value);\r\n  });\r\n};\r\n\r\nwindow.removerMorador = function(botao) {\r\n  const moradorDiv = botao.parentElement;\r\n  moradorDiv.remove();\r\n};\r\n\r\nfunction removerMascaraTelefone(telefone) {\r\n  return telefone.replace(/\\D/g, ''); // Remove tudo que não for número\r\n}\r\n\r\nfunction validarTelefone(telefone) {\r\n  const telefoneSemMascara = removerMascaraTelefone(telefone);\r\n  return telefoneSemMascara.length === 11; // Valida se o telefone tem 11 dígitos\r\n}\r\n\r\ndocument.getElementById('cadastroForm').addEventListener('submit', async (e) => {\r\n  e.preventDefault();\r\n\r\n  const nomeCondominio = document.getElementById('nomeCondominio').value.trim();\r\n  const bloco = document.getElementById('bloco').value.trim();\r\n  const apartamento = document.getElementById('apartamento').value.trim();\r\n\r\n  // Validação de campos obrigatórios\r\n  if (!nomeCondominio || !bloco || !apartamento) {\r\n    alert('Preencha todos os campos obrigatórios.');\r\n    return;\r\n  }\r\n\r\n  // Validação de tamanho máximo do bloco\r\n  if (bloco.length > 50) {\r\n    alert('O campo \"Bloco\" deve ter no máximo 50 caracteres.');\r\n    return;\r\n  }\r\n\r\n  // Validação de moradores\r\n  const moradores = [];\r\n  const moradoresDivs = document.querySelectorAll('.morador');\r\n  if (moradoresDivs.length === 0) {\r\n    alert('Adicione pelo menos um morador.');\r\n    return;\r\n  }\r\n\r\n  let telefoneValido = true;\r\n  moradoresDivs.forEach((morador) => {\r\n    const nome = formatarNome(morador.querySelector('input[name=\"moradorNome\"]').value.trim());\r\n    const telefoneComMascara = morador.querySelector('input[name=\"moradorTelefone\"]').value.trim();\r\n    const telefone = removerMascaraTelefone(telefoneComMascara); // Remove a máscara\r\n\r\n    if (!nome || !telefone) {\r\n      alert('Preencha todos os campos dos moradores.');\r\n      telefoneValido = false;\r\n      return;\r\n    }\r\n\r\n    if (!validarTelefone(telefoneComMascara)) {\r\n      alert('Telefone inválido. O telefone deve ter 11 dígitos.');\r\n      telefoneValido = false;\r\n      return;\r\n    }\r\n\r\n    moradores.push({ nome, telefone });\r\n  });\r\n\r\n  if (!telefoneValido) return;\r\n\r\n  // Enviar dados para o backend\r\n  const response = await fetch('http://localhost:5000/api/apartamentos/cadastrar', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ nomeCondominio, bloco, apartamento, moradores }),\r\n  });\r\n\r\n  const result = await response.json();\r\n  alert(result.message);\r\n\r\n  // Limpar o formulário após o cadastro\r\n  document.getElementById('cadastroForm').reset();\r\n  document.getElementById('moradores').innerHTML = '';\r\n});","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}